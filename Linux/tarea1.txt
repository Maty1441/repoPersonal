1) 
"/etc/fstab" Es un archivo de configuraci칩n que contiene informaci칩n sobre dispositivos de almacenamiento (como discos duros, particiones, CD/DVD, etc.) y c칩mo deben ser montados en el sistema.

Cada l칤nea del archivo /etc/fstab contiene 6 columnas:

file system:    Dispositivo o partici칩n (por ejemplo: /dev/sda1).
mount point:    Carpeta donde se montar치 el sistema (por ejemplo: /).
type:   Tipo de sistema de archivos (por ejemplo: ext4, swap, iso9660).
options:    Opciones de montaje (como defaults, noauto, errors=remount-ro).
dump:   Indica si debe hacerse backup con dump (0 = no, 1 = s칤).
pass:   Orden de chequeo con fsck (0 = nunca, 1 = primero, 2 = despu칠s).

Opciones de montaje:

auto:	Monta autom치ticamente en el arranque o con mount -a.
noauto:	No se monta autom치ticamente. Se debe montar manualmente.
exec:	Permite ejecutar archivos binarios desde esa partici칩n.
noexec:	No permite ejecutar programas desde esa partici칩n. 칔til para seguridad.
ro:	Monta el sistema en solo lectura (read-only).
rw:	Monta el sistema en lectura y escritura (read-write).
user:	Permite que cualquier usuario monte el sistema de archivos.
users:	Similar a user, pero permite que otros usuarios tambi칠n desmonten el sistema.
nouser:	Solo el root puede montar el sistema de archivos (por defecto).
suid:	Permite usar archivos con permisos suid/sgid (ejecuci칩n con privilegios temporales).
nosuid:	Desactiva los bits suid/sgid. Mejora seguridad.
noatime:	No actualiza la hora de 칰ltimo acceso a archivos (mejora rendimiento).
nodiratime:	No actualiza la hora de 칰ltimo acceso a directorios (tambi칠n mejora rendimiento).
defaults:	Usa una configuraci칩n est치ndar: rw, suid, dev, exec, auto, nouser, async.

2)
Para a침adir una tarea al cron utilizamos los siguientes comandos:

Comando para ver modificar los cron existentes: crontab -e

Comando a ejecutar en el cron: " 30 * * * * sh/bin/ "

3)
El comando "passwd" contiene:

Nombre de cada usuario
Una "X" indicando si tiene contrase침a
UID del usuario
GID
Comentario 
Directorio home del usuario
Shell predeterminada del usuario

Ejemplo: " usuario:x:uid:gid:comentario:/home/nombreUsuario:shell " 

El comando "shadow" contiene:

Nombre de usuario
Contrase침a encriptada y hasheada
Fecha del ultimo cambio de la contrase침a
Edad minima de la contrase침a
Edad maxima de la contrase침a
Periodo de aviso
Periodo de inactividad
Fecha de expiracion de la contrase침a
Reservado para uso futuro

Ejemplo: " usuario:*:20094:0:99999:7::: "

4)

8)
20 13 * 6-8 2-5 /scripts/script-mio

9)
Supongamos que entra un usuario nuevo llamado juan.

游댳 Paso 1: crear el usuario

sudo useradd juan

Esto crea la cuenta en /etc/passwd y /etc/shadow.
Por defecto, la cuenta se crea sin contrase침a.

游댳 Paso 2: establecer que debe cambiar la contrase침a en el primer login

sudo passwd -e juan

Explicaci칩n:

passwd -e expira inmediatamente la clave actual (que est치 vac칤a o temporal).

Cuando Juan entre por primera vez, el sistema le va a pedir que establezca su propia clave.


游댳 Paso 3: configurar vencimiento de la contrase침a el 31 de diciembre

Usamos chage para fijar la fecha exacta:

sudo chage -E 2025-12-31 juan

Explicaci칩n:

-E indica la fecha de expiraci칩n de la cuenta.

Formato: YYYY-MM-DD.

El 1 de enero del 2026 la cuenta quedar치 deshabilitada, a menos que el admin la reactive.

游댳 Paso 4: verificar la configuraci칩n

sudo chage -l juan

Ejemplo de salida:

칔ltima vez que se cambi칩 la contrase침a                : Sep 30, 2025
La contrase침a expira                                  : Dec 31, 2025
La contrase침a inactiva                                : nunca
La cuenta expira                                      : Dec 31, 2025
N칰mero m칤nimo de d칤as entre cambios de contrase침a     : 0
N칰mero m치ximo de d칤as entre cambios de contrase침a     : 90
N칰mero de d칤as de aviso antes de que caduque la clave : 7

Resumen:

Cada usuario recibe solo su nombre de usuario del admin.

Cuando entra por primera vez, el sistema lo obliga a elegir su propia contrase침a.

Esa contrase침a o la cuenta estar치n configuradas para expirar el 31/12 de este a침o, garantizando control y seguridad.

Para implementar esto en Linux se usan principalmente los comandos useradd, passwd -e y chage.